package de.docware.apps.etk.plugins.customer.daimler.iparts_edit.services.bomdb.kem.generated;

import de.docware.apps.etk.plugins.customer.daimler.iparts_edit.services.bomdb.kem.EcoContentService;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.5-b01
 * Generated source version: 2.2
 */
@WebServiceClient(name = "DaiEngBomDbServiceService", targetNamespace = "http://bomDbServices.eng.dai/", wsdlLocation = "file:/../wsdl/DaiEngBomDbServiceService.wsdl")
public class DaiEngBomDbServiceService
        extends Service {

    private final static URL DAIENGBOMDBSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException DAIENGBOMDBSERVICESERVICE_EXCEPTION;
    private final static QName DAIENGBOMDBSERVICESERVICE_QNAME = new QName("http://bomDbServices.eng.dai/", "DaiEngBomDbServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = EcoContentService.class.getResource("wsdl/DaiEngBomDbServiceService.wsdl");
        } catch (Exception ex) {
            e = new WebServiceException(ex);
        }
        DAIENGBOMDBSERVICESERVICE_WSDL_LOCATION = url;
        DAIENGBOMDBSERVICESERVICE_EXCEPTION = e;
    }

    public DaiEngBomDbServiceService() {
        super(__getWsdlLocation(), DAIENGBOMDBSERVICESERVICE_QNAME);
    }

    public DaiEngBomDbServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), DAIENGBOMDBSERVICESERVICE_QNAME, features);
    }

    public DaiEngBomDbServiceService(URL wsdlLocation) {
        super(wsdlLocation, DAIENGBOMDBSERVICESERVICE_QNAME);
    }

    public DaiEngBomDbServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, DAIENGBOMDBSERVICESERVICE_QNAME, features);
    }

    public DaiEngBomDbServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DaiEngBomDbServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns DaiEngBomDbService
     */
    @WebEndpoint(name = "DaiEngBomDbServicePort")
    public DaiEngBomDbService getDaiEngBomDbServicePort() {
        return super.getPort(new QName("http://bomDbServices.eng.dai/", "DaiEngBomDbServicePort"), DaiEngBomDbService.class);
    }

    /**
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns DaiEngBomDbService
     */
    @WebEndpoint(name = "DaiEngBomDbServicePort")
    public DaiEngBomDbService getDaiEngBomDbServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://bomDbServices.eng.dai/", "DaiEngBomDbServicePort"), DaiEngBomDbService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (DAIENGBOMDBSERVICESERVICE_EXCEPTION != null) {
            throw DAIENGBOMDBSERVICESERVICE_EXCEPTION;
        }
        return DAIENGBOMDBSERVICESERVICE_WSDL_LOCATION;
    }

}
